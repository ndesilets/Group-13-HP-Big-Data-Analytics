ALTER SESSION SET WORKAREA_SIZE_POLICY = MANUAL;
ALTER SESSION SET SORT_AREA_SIZE = 2147483647;
ALTER SESSION SET HASH_AREA_SIZE = 2147483647;
  
CREATE OR REPLACE VIEW CAPSTONE_DEMO.SINGLE_TABLE_ORDER_BY_V AS

SELECT
  *
FROM CAPSTONE_DEMO.CAPSTONE_PARALLEL_TEST_V1
ORDER BY
  PRESS_LOCAL_TIME;

  
CREATE OR REPLACE VIEW CAPSTONE_DEMO.SINGLE_TABLE_ANALYTICS_V AS

SELECT 
  DEVICE_ID,
  AVG(MEASUREMENT) AS AVG_MEASUREMENT
FROM CAPSTONE_DEMO.CAPSTONE_PARALLEL_TEST_V1
GROUP BY
  DEVICE_ID;

CREATE OR REPLACE VIEW CAPSTONE_DEMO.PARENT_CHILD_JOIN_V AS

SELECT
  A.PARENT_KEY,
  A.DEVICE_KEY,
  A.DEVICE_LOCAL_TIME,
  B.LOCATION_KEY,
  B.MEASUREMENT_VALUE
FROM CAPSTONE_DEMO.PARENT_TABLE_V1 A
  INNER JOIN CAPSTONE_DEMO.CHILD_TABLE_V1 B
    ON A.PARENT_KEY = B.PARENT_KEY;
    
CREATE OR REPLACE VIEW CAPSTONE_DEMO.PARENT_CHILD_JOIN_AGG_V AS

SELECT
  A.PARENT_KEY,
  A.DEVICE_KEY,
  B.LOCATION_KEY,
  MAX(B.MEASUREMENT_VALUE) AS MAX_VALUE
FROM CAPSTONE_DEMO.PARENT_TABLE_V1 A
  INNER JOIN CAPSTONE_DEMO.CHILD_TABLE_V1 B
    ON A.PARENT_KEY = B.PARENT_KEY
GROUP BY
  A.PARENT_KEY,
  A.DEVICE_KEY,
  B.LOCATION_KEY;
    
CREATE OR REPLACE VIEW CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1 AS

SELECT
  A.PARENT_KEY,
  A.DEVICE_KEY,
  B.LOCATION_KEY,
  AVG(B.MEASUREMENT_VALUE) AS AVG_MEAS_VALUE,
  COUNT(*) AS TOTAL_ROWS
FROM CAPSTONE_DEMO.PARENT_TABLE_V1 A
  INNER JOIN CAPSTONE_DEMO.CHILD_TABLE_V1 B
    ON A.PARENT_KEY = B.PARENT_KEY
WHERE A.DEVICE_KEY = 11
GROUP BY
  A.PARENT_KEY,
  A.DEVICE_KEY,
  B.LOCATION_KEY;
  
CREATE OR REPLACE VIEW CAPSTONE_DEMO.LEAD_LAG_V1 AS SELECT * FROM

(
WITH LEAD_LAG AS

(
SELECT /*+ MONITOR PARALLEL(16) GATHER_PLAN_STATISTICS FIND_ME */
  A.DEVICE_ID,
  A.DEVICE_LOCAL_TIME,
  A.LOCATION_KEY,
  A.SERIAL_NUMBER,
  LEAD(SERIAL_NUMBER) OVER(PARTITION BY A.DEVICE_ID, A.LOCATION_KEY ORDER BY DEVICE_LOCAL_TIME) AS NEXT_SERIAL_NUMBER,
  LAG(SERIAL_NUMBER) OVER(PARTITION BY A.DEVICE_ID, A.LOCATION_KEY ORDER BY DEVICE_LOCAL_TIME) AS PREVIOUS_SERIAL_NUMBER
FROM CAPSTONE_DEMO.LEAD_LAG_TEST_V1 A
WHERE A.DEVICE_ID = 11
)

SELECT
  A.DEVICE_ID,
  A.LOCATION_KEY
FROM LEAD_LAG
WHERE SERIAL_NUMBER <> NEXT_SERIAL_NUMBER
OR SERIAL_NUMBER <> PREVIOUS_SERIAL_NUMBER
OR PREVIOUS_SERIAL_NUMBER IS NULL
OR NEXT_SERIAL_NUMBER IS NULL
ORDER BY
  DEVICE_ID,
  LOCATION_KEY,
  DEVICE_LOCAL_TIME
);

SELECT /*+ MONITOR PARALLEL(2) GATHER_PLAN_STATISTICS FIND_ME */
  * 
FROM CAPSTONE_DEMO.SINGLE_TABLE_ORDER_BY_V;

SELECT /*+ MONITOR PARALLEL(2) GATHER_PLAN_STATISTICS FIND_ME */
  * 
FROM CAPSTONE_DEMO.SINGLE_TABLE_ANALYTICS_V;

SELECT /*+ MONITOR PARALLEL(2) GATHER_PLAN_STATISTICS FIND_ME */
  * 
FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

SELECT /*+ MONITOR PARALLEL(2) GATHER_PLAN_STATISTICS FIND_ME */
  * 
FROM CAPSTONE_DEMO.LEAD_LAG_V1;

SELECT /*+ MONITOR GATHER_PLAN_STATISTICS FIND_ME */
  *
FROM CAPSTONE_DEMO.PARENT_CHILD_JOIN_V;

SELECT /*+ MONITOR GATHER_PLAN_STATISTICS FIND_ME */
  *
FROM CAPSTONE_DEMO.PARENT_CHILD_JOIN_AGG_V;

BEGIN

DBMS_APPLICATION_INFO.SET_ACTION(ACTION_NAME => 'RESOURCE_MONITORING');

END;
