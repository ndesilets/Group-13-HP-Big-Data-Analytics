CREATE OR REPLACE VIEW CAPSTONE_DEMO.WORK_AREA_SUMMARY_V AS

WITH WORK_AREA_PER_SNAP AS

(
SELECT
  A.MODULE,
  A.CLIENT_INFO,
  A.SQL_EXEC_START,
  A.SNAPSHOT_TS,
  CAPSTONE_DEMO.INTERVAL_TO_SEC(A.SNAPSHOT_TS - A.SQL_EXEC_START) AS RUN_TIME_SEC,
  SID,
  SUM(A.WORK_AREA_SIZE/POWER(1024,3)) AS WORK_AREA_SIZE_GB,
  SUM(A.EXPECTED_SIZE/POWER(1024,3)) AS EXPECTED_SIZE_GB,
  SUM(A.ACTUAL_MEM_USED/POWER(1024,3)) AS ACTUAL_MEM_USED_GB,
  SUM(A.MAX_MEM_USED/POWER(1024,3)) AS MAX_MEM_USED_GB,
  SUM(A.TEMPSEG_SIZE/POWER(1024,3)) AS TEMPSEG_SIZE_GB
FROM CAPSTONE_DEMO.SQL_WORKAREA_ACTIVE_HISTORY A
WHERE A.SQL_EXEC_START IS NOT NULL
GROUP BY
  A.MODULE,
  A.CLIENT_INFO,
  A.SQL_EXEC_START,
  A.SNAPSHOT_TS,
  SID
)

SELECT
  A.MODULE,
  A.CLIENT_INFO,
  A.SQL_EXEC_START,
  B.DOP,
  B."_PGA_MAX_SIZE",
  B.DB_BIG_TABLE_CACHE_PERCENT,
  B.PARALLEL_DEGREE_POLICY,
  B.DB_CACHE_SIZE,
  A.SNAPSHOT_TS,
  A.RUN_TIME_SEC,
  SUM(WORK_AREA_SIZE_GB) AS WORK_AREA_SIZE_GB,
  SUM(EXPECTED_SIZE_GB) AS EXPECTED_SIZE_GB,
  SUM(ACTUAL_MEM_USED_GB) AS ACTUAL_MEM_USED_GB,
  SUM(MAX_MEM_USED_GB) AS MAX_MEM_USED_GB,
  NVL(SUM(TEMPSEG_SIZE_GB),0) AS TEMPSEG_SIZE_GB,
  MAX(ACTUAL_MEM_USED_GB) AS MAX_ACTUAL_MEM_USED_GB
FROM WORK_AREA_PER_SNAP A
  INNER JOIN CAPSTONE_DEMO.DOP_PARAMETERS_V B
    ON A.SQL_EXEC_START = B.SQL_EXEC_START
GROUP BY
  A.MODULE,
  A.CLIENT_INFO,
  A.SQL_EXEC_START,
  B.DOP,
  B."_PGA_MAX_SIZE",
  B.DB_BIG_TABLE_CACHE_PERCENT,
  B.PARALLEL_DEGREE_POLICY,
  B.DB_CACHE_SIZE,
  A.SNAPSHOT_TS,
  A.RUN_TIME_SEC;
  
SELECT
  *
FROM CAPSTONE_DEMO.WORK_AREA_SUMMARY_V;