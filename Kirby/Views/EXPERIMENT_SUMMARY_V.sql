CREATE OR REPLACE VIEW CAPSTONE_DEMO.EXPERIMENT_SUMMARY_V AS

SELECT
  A.MODULE,
  A.CLIENT_INFO,
  A.SQL_EXEC_START,
  A.RUN_NUMBER,
  A.DOP,
  A."_PGA_MAX_SIZE",
  A.BT_CACHE_TARGET,
  A.PARALLEL_DEGREE_POLICY,
  A.DB_CACHE_SIZE,
  A.IM_SIZE,
  A.IM_COMPRESS_LEVEL,
  A.RUN_TIME_SEC,
  A.DB_TIME_SEC,
  A.CPU_TIME_SEC,
  C.USER_IO_WAIT_TIME_SEC,
  B.WORK_AREA_SIZE_GB,
  B.EXPECTED_SIZE_GB,
  B.ACTUAL_MEM_USED_GB,
  B.MAX_MEM_USED_GB,
  B.TEMPSEG_SIZE_GB,
  C.BUFFER_GETS_GB,
  C.IO_INTERCONNECT_GB,
  C.PHYSICAL_READ_GB,
  C.PHYSICAL_WRITE_GB
FROM CAPSTONE_DEMO.TIME_USAGE_SUMMARY_V A
  INNER JOIN CAPSTONE_DEMO.WORK_AREA_SUMMARY_V B
    ON A.SQL_EXEC_START = B.SQL_EXEC_START
  INNER JOIN CAPSTONE_DEMO.IO_SUMMARY_V C
    ON A.SQL_EXEC_START = C.SQL_EXEC_START;
    
SELECT
  *
FROM CAPSTONE_DEMO.EXPERIMENT_SUMMARY_V
ORDER BY
  SQL_EXEC_START DESC;
  
WITH AVERAGE_PER_RUN AS

(
SELECT
  MODULE,
  CLIENT_INFO,
  DOP,
  "_PGA_MAX_SIZE",
  BT_CACHE_TARGET,
  PARALLEL_DEGREE_POLICY,
  DB_CACHE_SIZE,
  IM_SIZE,
  IM_COMPRESS_LEVEL,
  COUNT(*) AS TOTAL_RUNS,
  AVG(RUN_TIME_SEC) AS AVG_RUN_TIME,
  MAX(SQL_EXEC_START) AS LAST_RUN_TIME
FROM CAPSTONE_DEMO.EXPERIMENT_SUMMARY_V
GROUP BY
  MODULE,
  CLIENT_INFO,
  DOP,
  "_PGA_MAX_SIZE",
  BT_CACHE_TARGET,
  PARALLEL_DEGREE_POLICY,
  DB_CACHE_SIZE,
  IM_SIZE,
  IM_COMPRESS_LEVEL
)

SELECT
  MODULE,
  DOP,
  "_PGA_MAX_SIZE",
  BT_CACHE_TARGET,
  PARALLEL_DEGREE_POLICY,
  DB_CACHE_SIZE,
  IM_SIZE,
  IM_COMPRESS_LEVEL,
  SUM(TOTAL_RUNS) AS TOTAL_RUNS,
  SUM(AVG_RUN_TIME) AS TOTAL_RUN_TIME_SEC,
  MAX(LAST_RUN_TIME) AS LAST_RUN_TIME
FROM AVERAGE_PER_RUN
GROUP BY
  MODULE,
  DOP,
  "_PGA_MAX_SIZE",
  BT_CACHE_TARGET,
  PARALLEL_DEGREE_POLICY,
  DB_CACHE_SIZE,
  IM_SIZE,
  IM_COMPRESS_LEVEL
ORDER BY
  LAST_RUN_TIME DESC;