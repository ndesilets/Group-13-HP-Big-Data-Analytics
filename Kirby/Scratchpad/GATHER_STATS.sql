
--Resource Monitoring Tables
BEGIN -- Gather Stats

DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'CAPSTONE_PARALLEL_TEST_V1', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'ALL_TABLES_HISTORY', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'PARENT_TABLE_V1', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'CHILD_TABLE_V1', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'RESOURCE_USAGE_MONITORING', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'PARAMETERS_HISTORY', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'RESOURCE_MONITOR_STATUS', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'DATE_DIM', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'LEAD_LAG_TEST_V1', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'DESIGN_OF_EXPERIMENTS', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'SESSION_PROCESS_HISTORY', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'SQL_MONITOR_HISTORY', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'SQL_WORKAREA_ACTIVE_HISTORY', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'SESS_TIME_MODEL_PX_SESS_HIST', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'CAPSTONE_PARALLEL_TEST_V2', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'CAPSTONE_PARALLEL_TEST_V3', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => 'CAPSTONE_DEMO', TABNAME => 'CAPSTONE_PARALLEL_TEST_V4', GRANULARITY => 'ALL', ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => 16, CASCADE => DBMS_STATS.AUTO_CASCADE);

END;
/
--TRUNCATE TABLE CAPSTONE_DEMO.SQL_MONITOR_HISTORY;
--TRUNCATE TABLE CAPSTONE_DEMO.SESSION_PROCESS_HISTORY;
--TRUNCATE TABLE CAPSTONE_DEMO.SQL_WORKAREA_ACTIVE_HISTORY;
--TRUNCATE TABLE CAPSTONE_DEMO.SESS_TIME_MODEL_PX_SESS_HIST;
--TRUNCATE TABLE CAPSTONE_DEMO.PARAMETERS_HISTORY;


SELECT --Generate a gather stats statement for a specific table
  OWNER,
  TABLE_NAME,
  NVL(LAST_ANALYZED, SYSDATE - 1000) AS LAST_ANALYZED,
  NUM_ROWS,
  'DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => ''' || OWNER || ''',' || ' TABNAME => ''' || TABLE_NAME || ''',' || ' GRANULARITY => ''' || 'ALL'',' || ' ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, DEGREE => ' || :DEGREE ||', CASCADE => DBMS_STATS.AUTO_CASCADE);' AS GATHER_STATS_STATEMENT
FROM ALL_TABLES A
WHERE OWNER = :OWNER
ORDER BY 
  NUM_ROWS DESC NULLS LAST;