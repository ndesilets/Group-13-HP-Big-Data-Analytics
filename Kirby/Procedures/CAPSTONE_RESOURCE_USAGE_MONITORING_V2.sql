PROCEDURE RESOURCE_USAGE_MONITORING_V2(TIME_BETWEEN_LOOPS NUMBER) AS

STATUS VARCHAR2(5):='TRUE';
A NUMBER:= 0;

BEGIN

WHILE STATUS = 'TRUE' LOOP
A:=A+1;

INSERT INTO CAPSTONE_DEMO.SQL_MONITOR_HISTORY

SELECT
  MODULE,
  ACTION,
  CLIENT_INFO,
  A AS SNAPSHOT_ID,
  SYSTIMESTAMP AS SNAPSHOT_TS,
  SQL_EXEC_START,
  SQL_ID,
  SID,
  PX_MAXDOP,
  PX_SERVERS_REQUESTED,
  PX_SERVERS_ALLOCATED,
  BUFFER_GETS,
  DISK_READS,
  DIRECT_WRITES,
  IO_INTERCONNECT_BYTES,
  PHYSICAL_READ_REQUESTS,
  PHYSICAL_READ_BYTES,
  PHYSICAL_WRITE_REQUESTS,
  PHYSICAL_WRITE_BYTES,
  USER_IO_WAIT_TIME,
  SQL_TEXT
FROM V$SQL_MONITOR A
WHERE A.ACTION = 'RESOURCE_MONITORING';

INSERT INTO CAPSTONE_DEMO.SQL_WORKAREA_ACTIVE_HISTORY

SELECT
  B.MODULE,
  B.ACTION,
  B.CLIENT_INFO,
  A AS SNAPSHOT_ID,
  SYSTIMESTAMP AS SNAPSHOT_TS,
  B.SQL_EXEC_START,
  B.SQL_ID,
  B.SID,
  A.OPERATION_TYPE,
  A.OPERATION_ID,
  A.WORK_AREA_SIZE,
  A.EXPECTED_SIZE,
  A.ACTUAL_MEM_USED,
  A.MAX_MEM_USED,
  A.NUMBER_PASSES,
  A.TEMPSEG_SIZE
FROM V$SQL_WORKAREA_ACTIVE A
  INNER JOIN V$SESSION B
    ON A.SID = B.SID
WHERE B.ACTION = 'RESOURCE_MONITORING';

INSERT INTO CAPSTONE_DEMO.SESSION_PROCESS_HISTORY

SELECT
  A.MODULE,
  A.ACTION,
  A.CLIENT_INFO,
  A AS SNAPSHOT_ID,
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A.SQL_EXEC_START,
  A.SQL_ID,
  A.SID,
  A.SADDR,
  B.PGA_USED_MEM,
  B.PGA_ALLOC_MEM,
  B.PGA_FREEABLE_MEM,
  B.PGA_MAX_MEM
FROM V$SESSION A
  INNER JOIN V$PROCESS B
    ON A.PADDR = B.ADDR
WHERE A.ACTION = 'RESOURCE_MONITORING';

INSERT INTO CAPSTONE_DEMO.SESS_TIME_MODEL_PX_SESS_HIST

SELECT
  C.MODULE,
  C.ACTION,
  C.CLIENT_INFO,
  A AS SNAPSHOT_ID,
  SYSTIMESTAMP AS SNAPSHOT_TS,
  C.SQL_EXEC_START,
  C.SQL_ID,
  C.SID,
  A.STAT_NAME,
  A.VALUE,
  B.QCSID
FROM V$SESS_TIME_MODEL A
  INNER JOIN V$PX_SESSION B
    ON A.SID = B.SID
  INNER JOIN V$SESSION C
    ON A.SID = C.SID
WHERE C.ACTION = 'RESOURCE_MONITORING'
AND VALUE > 0;

INSERT INTO CAPSTONE_DEMO.SGASTAT_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A AS SNAPSHOT_ID,
  A.POOL,
  A.NAME,
  A.BYTES,
  A.CON_ID
FROM V$SGASTAT A;

INSERT INTO CAPSTONE_DEMO.SGA_RESIZE_OPS_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A AS SNAPSHOT_TS,
  A.COMPONENT,
  A.OPER_TYPE,
  A.OPER_MODE,
  A.PARAMETER,
  A.INITIAL_SIZE,
  A.TARGET_SIZE,
  A.FINAL_SIZE,
  A.STATUS,
  A.START_TIME,
  A.END_TIME,
  A.CON_ID
FROM V$SGA_RESIZE_OPS A;

INSERT INTO CAPSTONE_DEMO.SGA_DYNAMIC_COMPONENTS_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A AS SNAPSHOT_TS,
  A.COMPONENT,
  A.CURRENT_SIZE,
  A.MIN_SIZE,
  A.MAX_SIZE,
  A.USER_SPECIFIED_SIZE,
  A.OPER_COUNT,
  A.LAST_OPER_TYPE,
  A.LAST_OPER_MODE,
  A.LAST_OPER_TIME,
  A.GRANULE_SIZE,
  A.CON_ID
FROM V$SGA_DYNAMIC_COMPONENTS A;

INSERT INTO CAPSTONE_DEMO.SGA_DYNAMIC_FREE_MEM_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A AS SNAPSHOT_TS,
  A.CURRENT_SIZE,
  A.CON_ID
FROM V$SGA_DYNAMIC_FREE_MEMORY A;

INSERT INTO CAPSTONE_DEMO.BTS_STAT_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A AS SNAPSHOT_TS,
  A.TSN,
  A.TSV,
  A.MAXSIZE,
  A.CURSIZE,
  A.USED,
  A.UTIME,
  A.DALLOC,
  A.DFREE,
  A.NALLOC,
  A.NFREE,
  A.DTIME,
  A.TALLOC,
  A.TFREE,
  A.TTIME,
  A.FLAG,
  A.CON_ID
FROM V$BTS_STAT A;

INSERT INTO CAPSTONE_DEMO.BT_SCAN_CACHE_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  A AS SNAPSHOT_TS,
  A.BT_CACHE_ALLOC,
  A.BT_CACHE_TARGET,
  A.OBJECT_COUNT,
  A.MEMORY_BUF_ALLOC,
  A.MIN_CACHED_TEMP,
  A.CON_ID
FROM V$BT_SCAN_CACHE A;

INSERT INTO CAPSTONE_DEMO.BT_SCAN_OBJ_TEMPS_HISTORY

SELECT
  SYSTIMESTAMP AS SNAPSHOT_TS,
  NULL AS SNAPSHOT_ID,
  A.TS#,
  A.DATAOBJ#,
  A.SIZE_IN_BLKS,
  A.TEMPERATURE,
  A.POLICY,
  A.CACHED_IN_MEM,
  A.CON_ID
FROM V$BT_SCAN_OBJ_TEMPS A;

COMMIT;

DBMS_LOCK.SLEEP(SECONDS => TIME_BETWEEN_LOOPS);
SELECT STATUS INTO STATUS FROM CAPSTONE_DEMO.RESOURCE_MONITOR_STATUS;

END LOOP;

END RESOURCE_USAGE_MONITORING_V2;