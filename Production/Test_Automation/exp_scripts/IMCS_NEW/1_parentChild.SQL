ALTER SESSION SET CONTAINER = DBCAP;

-----------------------------------------------------------
-- NONE 
-----------------------------------------------------------
ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 INMEMORY NO MEMCOMPRESS PRIORITY CRITICAL;
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  INMEMORY NO MEMCOMPRESS PRIORITY CRITICAL;

EXECUTE CAPSTONE_DEMO.RESOURCE_MONITOR.PARAMETERS_HISTORY_INSERT;

DECLARE
    populated boolean := false;
    completed number := 0;
BEGIN
    WHILE populated != true
    LOOP
        SELECT
            COUNT(*)
        INTO
            completed
        FROM V$IM_SEGMENTS
        WHERE POPULATE_STATUS = 'COMPLETED';

        IF completed = 2 THEN
            populated := true;
        END IF;

        DBMS_LOCK.SLEEP(SECONDS => 30);
    END LOOP;
END;
/

BEGIN
  DBMS_APPLICATION_INFO.SET_MODULE(MODULE_NAME => 'IMCS_EXPERIMENT',ACTION_NAME => 'RESOURCE_MONITORING');
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'PARENT_CHILD_ANALYTICS_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'FILTER_PARENT_CHILD_JOIN_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 

-----------------------------------------------------------
-- DML 
-----------------------------------------------------------
ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 INMEMORY MEMCOMPRESS FOR DML PRIORITY CRITICAL;
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  INMEMORY MEMCOMPRESS FOR DML PRIORITY CRITICAL;

EXECUTE CAPSTONE_DEMO.RESOURCE_MONITOR.PARAMETERS_HISTORY_INSERT;

DECLARE
    populated boolean := false;
    completed number := 0;
BEGIN
    WHILE populated != true
    LOOP
        SELECT
            COUNT(*)
        INTO
            completed
        FROM V$IM_SEGMENTS
        WHERE POPULATE_STATUS = 'COMPLETED';

        IF completed = 2 THEN
            populated := true;
        END IF;

        DBMS_LOCK.SLEEP(SECONDS => 30);
    END LOOP;
END;
/

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'PARENT_CHILD_ANALYTICS_V1');
END;
/
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'FILTER_PARENT_CHILD_JOIN_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 

-----------------------------------------------------------
-- QUERY LOW 
-----------------------------------------------------------
ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 INMEMORY MEMCOMPRESS FOR QUERY LOW PRIORITY CRITICAL;
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  INMEMORY MEMCOMPRESS FOR QUERY LOW PRIORITY CRITICAL;

EXECUTE CAPSTONE_DEMO.RESOURCE_MONITOR.PARAMETERS_HISTORY_INSERT;

DECLARE
    populated boolean := false;
    completed number := 0;
BEGIN
    WHILE populated != true
    LOOP
        SELECT
            COUNT(*)
        INTO
            completed
        FROM V$IM_SEGMENTS
        WHERE POPULATE_STATUS = 'COMPLETED';

        IF completed = 2 THEN
            populated := true;
        END IF;

        DBMS_LOCK.SLEEP(SECONDS => 30);
    END LOOP;
END;
/

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'PARENT_CHILD_ANALYTICS_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'FILTER_PARENT_CHILD_JOIN_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 

-----------------------------------------------------------
-- QUERY HIGH 
-----------------------------------------------------------
ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 INMEMORY MEMCOMPRESS FOR QUERY HIGH PRIORITY CRITICAL;
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  INMEMORY MEMCOMPRESS FOR QUERY HIGH PRIORITY CRITICAL;

EXECUTE CAPSTONE_DEMO.RESOURCE_MONITOR.PARAMETERS_HISTORY_INSERT;

DECLARE
    populated boolean := false;
    completed number := 0;
BEGIN
    WHILE populated != true
    LOOP
        SELECT
            COUNT(*)
        INTO
            completed
        FROM V$IM_SEGMENTS
        WHERE POPULATE_STATUS = 'COMPLETED';

        IF completed = 2 THEN
            populated := true;
        END IF;

        DBMS_LOCK.SLEEP(SECONDS => 30);
    END LOOP;
END;
/

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'PARENT_CHILD_ANALYTICS_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'FILTER_PARENT_CHILD_JOIN_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;


-----------------------------------------------------------
-- CAPACITY LOW
-----------------------------------------------------------
ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 INMEMORY MEMCOMPRESS FOR CAPACITY LOW PRIORITY CRITICAL;
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  INMEMORY MEMCOMPRESS FOR CAPACITY LOW PRIORITY CRITICAL;

EXECUTE CAPSTONE_DEMO.RESOURCE_MONITOR.PARAMETERS_HISTORY_INSERT;

DECLARE
    populated boolean := false;
    completed number := 0;
BEGIN
    WHILE populated != true
    LOOP
        SELECT
            COUNT(*)
        INTO
            completed
        FROM V$IM_SEGMENTS
        WHERE POPULATE_STATUS = 'COMPLETED';

        IF completed = 2 THEN
            populated := true;
        END IF;

        DBMS_LOCK.SLEEP(SECONDS => 30);
    END LOOP;
END;
/

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'PARENT_CHILD_ANALYTICS_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'FILTER_PARENT_CHILD_JOIN_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;

-----------------------------------------------------------
-- CAPACITY HIGH 
-----------------------------------------------------------
ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 INMEMORY MEMCOMPRESS FOR CAPACITY HIGH PRIORITY CRITICAL;
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  INMEMORY MEMCOMPRESS FOR CAPACITY HIGH PRIORITY CRITICAL;

EXECUTE CAPSTONE_DEMO.RESOURCE_MONITOR.PARAMETERS_HISTORY_INSERT;

DECLARE
    populated boolean := false;
    completed number := 0;
BEGIN
    WHILE populated != true
    LOOP
        SELECT
            COUNT(*)
        INTO
            completed
        FROM V$IM_SEGMENTS
        WHERE POPULATE_STATUS = 'COMPLETED';

        IF completed = 2 THEN
            populated := true;
        END IF;

        DBMS_LOCK.SLEEP(SECONDS => 30);
    END LOOP;
END;
/

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'PARENT_CHILD_ANALYTICS_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.PARENT_CHILD_ANALYTICS_V1;

BEGIN
  DBMS_APPLICATION_INFO.SET_CLIENT_INFO(CLIENT_INFO => 'FILTER_PARENT_CHILD_JOIN_V1');
END;
/

SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1; 
SELECT /*+ PARALLEL(32) */ * FROM CAPSTONE_DEMO.FILTER_PARENT_CHILD_JOIN_V1;


ALTER TABLE CAPSTONE_DEMO.PARENT_TABLE_V1 NO INMEMORY;                                       
ALTER TABLE CAPSTONE_DEMO.CHILD_TABLE_V1  NO INMEMORY;
